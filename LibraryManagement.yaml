openapi: 3.0.0
servers:
  - url: https://virtserver.swaggerhub.com/HEIFREDDY2/LibraryManagement/1.0.0
info:
  title: Library Management API
  description: API for managing books and authors in a library.
  version: 1.0.0

paths:
  /books:
    get:
      summary: Get a list of books
      parameters:
        - in: query
          name: bookName
          required: false
          schema:
            type: string
        - in: query
          name: releaseDate
          required: false
          schema:
            type: string
            format: date
            example: "2020-01-01"
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
    put:
      summary: Update an existing book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
    delete:
      summary: Delete a book
      parameters:
        - in: query
          name: bookId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Book deleted
          
  /authors:
    get:
      summary: Get a list of authors
      parameters:
        - in: query
          name: authorName
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    post:
      summary: Create a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author created
    put:
      summary: Update an existing author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated
    delete:
      summary: Delete an author
      parameters:
        - in: query
          name: authorId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Author deleted

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F

